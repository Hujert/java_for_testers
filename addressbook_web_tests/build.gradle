plugins {
    id 'java'
    id 'io.qameta.allure' version '2.11.2'

}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

def allureVersion = '2.29.0'
def aspectJVersion = '1.9.22'

configurations {
    agent {
        canBeResolved = true
        canBeConsumed = true
    }
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    implementation 'org.seleniumhq.selenium:selenium-java:4.35.0'
    implementation 'org.jcommander:jcommander:2.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.19.0'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.14.2'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.18.1'
    implementation 'com.mysql:mysql-connector-j:9.4.0'
    implementation 'org.hibernate.orm:hibernate-core:7.0.0.CR1'

    agent "org.aspectj:aspectjweaver:$aspectJVersion"

    testImplementation platform("io.qameta.allure:allure-bom:$allureVersion")
    testImplementation "io.qameta.allure:allure-junit5"
    testImplementation "io.qameta.allure:allure-commandline:$allureVersion"
}

allure {
    version = allureVersion
    useJUnit5 {
        version = allureVersion
    }
}

test {
    useJUnitPlatform()
    if (project.hasProperty("browser")) {
        systemProperty("browser", project.property("browser"))
    }
    if (project.hasProperty("target")) {
        systemProperty("target", project.property("target"))
    }
    jvmArgs = [ "-javaagent:${configurations.agent.singleFile}" ]

    ignoreFailures = true

    // Для Allure
    systemProperty 'allure.results.directory', 'build/allure-results'
    outputs.upToDateWhen { false }

    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
        showStandardStreams = true
    }
}